use crate::blockchain::sized_bytes::Bytes32;
use num_bigint::BigInt;

#[derive(Default, Debug, Clone, PartialEq, Eq, serde::Serialize, serde::Deserialize)]
pub struct ConsensusOverrides {
    pub slot_blocks_target: Option<u32>,
    pub min_blocks_per_challenge_block: Option<u8>,
    pub max_sub_slot_blocks: Option<u32>,
    pub num_sps_sub_slot: Option<u32>,
    pub sub_slot_iters_starting: Option<u64>,
    pub difficulty_constant_factor: Option<u128>,
    pub difficulty_starting: Option<u64>,
    pub difficulty_change_max_factor: Option<u32>,
    pub sub_epoch_blocks: Option<u32>,
    pub epoch_blocks: Option<u32>,
    pub significant_bits: Option<BigInt>,
    pub discriminant_size_bits: Option<BigInt>,
    pub number_zero_bits_plot_filter: Option<u8>,
    pub min_plot_size: Option<u8>,
    pub max_plot_size: Option<u8>,
    pub sub_slot_time_target: Option<BigInt>,
    pub num_sp_intervals_extra: Option<u64>,
    pub max_future_time: Option<BigInt>,
    pub max_future_time2: Option<BigInt>,
    pub number_of_timestamps: Option<BigInt>,
    pub genesis_challenge: Option<Bytes32>,
    pub agg_sig_me_additional_data: Option<Bytes32>,
    pub genesis_pre_farm_pool_puzzle_hash: Option<Bytes32>,
    pub genesis_pre_farm_farmer_puzzle_hash: Option<Bytes32>,
    pub max_vdf_witness_size: Option<BigInt>,
    pub mempool_block_buffer: Option<BigInt>,
    pub max_coin_amount: Option<BigInt>,
    pub max_block_cost_clvm: Option<BigInt>,
    pub cost_per_byte: Option<BigInt>,
    pub weight_proof_threshold: Option<u8>,
    pub weight_proof_recent_blocks: Option<u32>,
    pub max_block_count_per_requests: Option<u32>,
    pub blocks_cache_size: Option<u32>,
    pub max_generator_size: Option<u32>,
    pub max_generator_ref_list_size: Option<u32>,
    pub pool_sub_slot_iters: Option<u64>,
    pub soft_fork2_height: Option<u32>,
    pub soft_fork3_height: Option<u32>,
    pub hard_fork_height: Option<u32>,
    pub hard_fork_fix_height: Option<u32>,
    pub plot_filter_128_height: Option<u32>,
    pub plot_filter_64_height: Option<u32>,
    pub plot_filter_32_height: Option<u32>,
    pub bech32_prefix: Option<String>,
    pub is_testnet: Option<bool>,
}
